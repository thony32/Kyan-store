/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PaymentImport } from './routes/payment'
import { Route as PublicImport } from './routes/_public'

// Create Virtual Routes

const AdminLazyImport = createFileRoute('/admin')()
const PublicIndexLazyImport = createFileRoute('/_public/')()
const AdminProductLazyImport = createFileRoute('/admin/product')()
const AdminPaymentLazyImport = createFileRoute('/admin/payment')()
const AdminDiscountLazyImport = createFileRoute('/admin/discount')()
const AdminDashboardLazyImport = createFileRoute('/admin/dashboard')()
const AdminCategoryLazyImport = createFileRoute('/admin/category')()
const PublicCartLazyImport = createFileRoute('/_public/cart')()

// Create/Update Routes

const AdminLazyRoute = AdminLazyImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/admin.lazy').then((d) => d.Route))

const PaymentRoute = PaymentImport.update({
  path: '/payment',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexLazyRoute = PublicIndexLazyImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/index.lazy').then((d) => d.Route))

const AdminProductLazyRoute = AdminProductLazyImport.update({
  path: '/product',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() => import('./routes/admin/product.lazy').then((d) => d.Route))

const AdminPaymentLazyRoute = AdminPaymentLazyImport.update({
  path: '/payment',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() => import('./routes/admin/payment.lazy').then((d) => d.Route))

const AdminDiscountLazyRoute = AdminDiscountLazyImport.update({
  path: '/discount',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() =>
  import('./routes/admin/discount.lazy').then((d) => d.Route),
)

const AdminDashboardLazyRoute = AdminDashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() =>
  import('./routes/admin/dashboard.lazy').then((d) => d.Route),
)

const AdminCategoryLazyRoute = AdminCategoryLazyImport.update({
  path: '/category',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() =>
  import('./routes/admin/category.lazy').then((d) => d.Route),
)

const PublicCartLazyRoute = PublicCartLazyImport.update({
  path: '/cart',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/cart.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/payment': {
      id: '/payment'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof PaymentImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/_public/cart': {
      id: '/_public/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof PublicCartLazyImport
      parentRoute: typeof PublicImport
    }
    '/admin/category': {
      id: '/admin/category'
      path: '/category'
      fullPath: '/admin/category'
      preLoaderRoute: typeof AdminCategoryLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/admin/discount': {
      id: '/admin/discount'
      path: '/discount'
      fullPath: '/admin/discount'
      preLoaderRoute: typeof AdminDiscountLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/admin/payment': {
      id: '/admin/payment'
      path: '/payment'
      fullPath: '/admin/payment'
      preLoaderRoute: typeof AdminPaymentLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/admin/product': {
      id: '/admin/product'
      path: '/product'
      fullPath: '/admin/product'
      preLoaderRoute: typeof AdminProductLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexLazyImport
      parentRoute: typeof PublicImport
    }
  }
}

// Create and export the route tree

interface PublicRouteChildren {
  PublicCartLazyRoute: typeof PublicCartLazyRoute
  PublicIndexLazyRoute: typeof PublicIndexLazyRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicCartLazyRoute: PublicCartLazyRoute,
  PublicIndexLazyRoute: PublicIndexLazyRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

interface AdminLazyRouteChildren {
  AdminCategoryLazyRoute: typeof AdminCategoryLazyRoute
  AdminDashboardLazyRoute: typeof AdminDashboardLazyRoute
  AdminDiscountLazyRoute: typeof AdminDiscountLazyRoute
  AdminPaymentLazyRoute: typeof AdminPaymentLazyRoute
  AdminProductLazyRoute: typeof AdminProductLazyRoute
}

const AdminLazyRouteChildren: AdminLazyRouteChildren = {
  AdminCategoryLazyRoute: AdminCategoryLazyRoute,
  AdminDashboardLazyRoute: AdminDashboardLazyRoute,
  AdminDiscountLazyRoute: AdminDiscountLazyRoute,
  AdminPaymentLazyRoute: AdminPaymentLazyRoute,
  AdminProductLazyRoute: AdminProductLazyRoute,
}

const AdminLazyRouteWithChildren = AdminLazyRoute._addFileChildren(
  AdminLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteWithChildren
  '/payment': typeof PaymentRoute
  '/admin': typeof AdminLazyRouteWithChildren
  '/cart': typeof PublicCartLazyRoute
  '/admin/category': typeof AdminCategoryLazyRoute
  '/admin/dashboard': typeof AdminDashboardLazyRoute
  '/admin/discount': typeof AdminDiscountLazyRoute
  '/admin/payment': typeof AdminPaymentLazyRoute
  '/admin/product': typeof AdminProductLazyRoute
  '/': typeof PublicIndexLazyRoute
}

export interface FileRoutesByTo {
  '/payment': typeof PaymentRoute
  '/admin': typeof AdminLazyRouteWithChildren
  '/cart': typeof PublicCartLazyRoute
  '/admin/category': typeof AdminCategoryLazyRoute
  '/admin/dashboard': typeof AdminDashboardLazyRoute
  '/admin/discount': typeof AdminDiscountLazyRoute
  '/admin/payment': typeof AdminPaymentLazyRoute
  '/admin/product': typeof AdminProductLazyRoute
  '/': typeof PublicIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_public': typeof PublicRouteWithChildren
  '/payment': typeof PaymentRoute
  '/admin': typeof AdminLazyRouteWithChildren
  '/_public/cart': typeof PublicCartLazyRoute
  '/admin/category': typeof AdminCategoryLazyRoute
  '/admin/dashboard': typeof AdminDashboardLazyRoute
  '/admin/discount': typeof AdminDiscountLazyRoute
  '/admin/payment': typeof AdminPaymentLazyRoute
  '/admin/product': typeof AdminProductLazyRoute
  '/_public/': typeof PublicIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/payment'
    | '/admin'
    | '/cart'
    | '/admin/category'
    | '/admin/dashboard'
    | '/admin/discount'
    | '/admin/payment'
    | '/admin/product'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/payment'
    | '/admin'
    | '/cart'
    | '/admin/category'
    | '/admin/dashboard'
    | '/admin/discount'
    | '/admin/payment'
    | '/admin/product'
    | '/'
  id:
    | '__root__'
    | '/_public'
    | '/payment'
    | '/admin'
    | '/_public/cart'
    | '/admin/category'
    | '/admin/dashboard'
    | '/admin/discount'
    | '/admin/payment'
    | '/admin/product'
    | '/_public/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PublicRoute: typeof PublicRouteWithChildren
  PaymentRoute: typeof PaymentRoute
  AdminLazyRoute: typeof AdminLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  PublicRoute: PublicRouteWithChildren,
  PaymentRoute: PaymentRoute,
  AdminLazyRoute: AdminLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_public",
        "/payment",
        "/admin"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/cart",
        "/_public/"
      ]
    },
    "/payment": {
      "filePath": "payment.tsx"
    },
    "/admin": {
      "filePath": "admin.lazy.tsx",
      "children": [
        "/admin/category",
        "/admin/dashboard",
        "/admin/discount",
        "/admin/payment",
        "/admin/product"
      ]
    },
    "/_public/cart": {
      "filePath": "_public/cart.lazy.tsx",
      "parent": "/_public"
    },
    "/admin/category": {
      "filePath": "admin/category.lazy.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.lazy.tsx",
      "parent": "/admin"
    },
    "/admin/discount": {
      "filePath": "admin/discount.lazy.tsx",
      "parent": "/admin"
    },
    "/admin/payment": {
      "filePath": "admin/payment.lazy.tsx",
      "parent": "/admin"
    },
    "/admin/product": {
      "filePath": "admin/product.lazy.tsx",
      "parent": "/admin"
    },
    "/_public/": {
      "filePath": "_public/index.lazy.tsx",
      "parent": "/_public"
    }
  }
}
ROUTE_MANIFEST_END */
